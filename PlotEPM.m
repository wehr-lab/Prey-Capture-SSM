function PlotEPM

%loads a pruned_tpm generated by plot_posterior_probs
% plots the pattern of observations for each state

load pruned_tpm
close all
fprintf('\nplotting emission probabilies for data in\n %s\n', pwd)

obs_dim=size(X, 2);
for i=1:pruned_num_states
    starts=pruned_epochs(i).starts;
    stops=pruned_epochs(i).stops;
    frames=[];
    for e=1:pruned_epochs(i).num_epochs
        frames=[frames starts(e):stops(e)];
    end
    mean_obs(i,:)=mean(X(frames,:));
    std_obs(i,:)=std(X(frames,:));
end

mean_obs=mean_obs'; %flip

% normalize to the range 0,1
for j=1: obs_dim
    tmp=mean_obs(j,:) - min(mean_obs(j,:)); %make positive
    nmean_obs(j,:)=tmp./max(tmp); %normalize
end

figure
imagesc(mean_obs)
xlabel('state')
ylabel('observation variable')
set(gca, 'ytick', 1:obs_dim);
set(gca, 'yticklabel', X_description);
title('not normalized')

figure
imagesc(nmean_obs)
xlabel('state')
ylabel('observation variable')
set(gca, 'ytick', 1:obs_dim);
set(gca, 'yticklabel', X_description);
title('normalized')

tree=linkage(tpm, 'average');
figure
colorthresh=.6*max(tree(:,3));
[H,T,outperm] = dendrogram(tree,'Orientation','left','ColorThreshold',colorthresh);
set(H,'LineWidth',2)
figure
imagesc(nmean_obs(:,outperm))
xlabel('state')
ylabel('observation variable')
set(gca, 'ytick', 1:obs_dim);
set(gca, 'yticklabel', X_description);
set(gca, 'xtick', 1:obs_dim);
set(gca, 'xticklabel', X_description);
set(gca, 'xtick',1:pruned_num_states,  'xticklabel', outperm)
title('normalized and clustered')


