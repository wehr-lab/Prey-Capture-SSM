function ConvertTracksToObservations(groupdatadir, groupdatafilename, outputdir)

% generate Observations data from DLC tracks, formatted for input to SSM
% load groupdata and concatenate some variables into a single matrix, and
% then save as a mat file
% groupdatafilename: cell array of group data file names

X=[];
Groupdata=[];
drug=[]; %1=saline, 2=lidocaine, just from the order created here
drug_description{1}='saline'; drug_description{2}='lidocaine';
cd (groupdatadir)
for sourcefilenum=1:length(groupdatafilename)
    load(groupdatafilename{sourcefilenum})
%     for i=1:length(groupdata)
%         fprintf('\n%d %d %d %d', groupdata(i).start_frame, ...
%             groupdata(i).stop_frame, ...
%             groupdata(i).firstcontact_frame, ...
%             groupdata(i).start_frame+groupdata(i).firstcontact_frame)
%     end
    
    for i=1:length(groupdata)
        startidx=size(X,1)+1;
        %     region=1:groupdata(i).firstcontact_frame;
        region=1:groupdata(i).numframes;
        % first contact is relative to start_frame
        %before July 21 2020 we just used the whole video (all frames)
        %now we trim to start->firstcontact
        X(startidx:startidx-1+length(groupdata(i).mousespeed(region(1:end-1))), 1)= groupdata(i).mousespeed(region(1:end-1));
        X(startidx:startidx-1+length(groupdata(i).cricketspeed(region(1:end-1))), 2)= groupdata(i).cricketspeed(region(1:end-1));
        X(startidx:startidx-1+length(groupdata(i).range(region)), 3)= groupdata(i).range(region);
        X(startidx:startidx-1+length(groupdata(i).azimuth(region)), 4)= groupdata(i).azimuth(region);
        X(startidx:startidx-1+length(groupdata(i).mousevelocity0(region(1:end-1))), 5)= groupdata(i).mousevelocity0(region(1:end-1));
        X(startidx:startidx-1+length(groupdata(i).mousevelocity90(region(1:end-1))), 6)= groupdata(i).mousevelocity90(region(1:end-1));
        X(startidx:startidx-1+length(groupdata(i).cricketvelocity0(region(1:end-1))), 7)= groupdata(i).cricketvelocity0(region(1:end-1));
        X(startidx:startidx-1+length(groupdata(i).cricketvelocity90(region(1:end-1))), 8)= groupdata(i).cricketvelocity90(region(1:end-1));
        X(startidx:startidx-1+length(groupdata(i).drange(region(1:end-1))), 9)= groupdata(i).drange(region(1:end-1));
        X(startidx:startidx-1+length(groupdata(i).dazimuth(region(1:end-1))), 10)= groupdata(i).dazimuth(region(1:end-1));
        X(startidx:startidx-1+length(groupdata(i).mouseacceleration(region(1:end-2))), 11)= groupdata(i).mouseacceleration(region(1:end-2));
        X(startidx:startidx-1+length(groupdata(i).cricketacceleration(region(1:end-2))), 12)= groupdata(i).cricketacceleration(region(1:end-2));
    %    X(startidx:startidx-1+length(groupdata(i).cricket_thigmo_distance(region)), 13)= groupdata(i).cricket_thigmo_distance(region);
    %    X(startidx:startidx-1+length(groupdata(i).mouse_thigmo_distance(region)), 14)= groupdata(i).mouse_thigmo_distance(region);
        drug(startidx:startidx-1+length(groupdata(i).range(region)))=1;
        localframenum(startidx:startidx-1+length(region))=region;
    end
    
    if sourcefilenum==1 
        Groupdata=groupdata;
    else
        sz1=length(Groupdata);
        sz2=length(groupdata);
        Groupdata(sz1+1:sz1+sz2)=groupdata;
    end
    clear groupdata
end



X_description{1}='mousespeed';
X_description{2}='cricketspeed';
X_description{3}='range';
X_description{4}='azimuth';
X_description{5}='mousevelocity0';
X_description{6}='mousevelocity90';
X_description{7}='cricketvelocity0';
X_description{8}='cricketvelocity90';
X_description{9}='drange/dt';
X_description{10}='dazimuth/dt';
X_description{11}='mouseacceleration';
X_description{12}='cricketacceleration';
X_description{13}='cricket_distance_from_wall';
X_description{14}='mouse_distance_from_wall';


X=real(X);

%normalize X
rawX=X; %non-normalized
for j=1: size(rawX, 2)
    X(:,j)=rawX(:,j)./max(abs(rawX(:,j))); %normalize
end

cd(outputdir)
run_on=sprintf('generated by %s on %s', mfilename, datestr(now));
generated_by=mfilename;
save training_data X rawX X_description  drug drug_description run_on groupdatadir groupdatafilename outputdir localframenum Groupdata
fprintf('\nsaved observations to file training_data in %s', outputdir)

