function PlotStateTracksSocial(outputdir)
fprintf('\n%s',mfilename)
% This is written for Social, might work for prey capture with some tweaks
% get tracks for each state and epoch (up to some
% max num epochs)
%
% tracks are from training_data.mat
% slices them into states and epochs based on
% pruned_tpm.mat generated by PruneTPM
if nargin==0 outputdir=pwd;end

close all
cd (outputdir)
load('pruned_tpm.mat')
load('training_data.mat')

datadirs_by_frame=datadirs_by_frame;
pruned_num_states=pruned_num_states;
pruned_epochs=pruned_epochs;
localframenum=localframenum;

for k=1:pruned_num_states
    fprintf('\nstate %d/%d ', k, pruned_num_states );
    figure
    TL=tiledlayout(6,1,'TileSpacing','compact');

    nbytes = fprintf(' epoch 0/%d', pruned_epochs(k).num_epochs );
    for e=1:min(100, pruned_epochs(k).num_epochs)
        fprintf(repmat('\b',1,nbytes));
        nbytes = fprintf(' epoch %d/%d', e,pruned_epochs(k).num_epochs );

        absstartframe=pruned_epochs(k).starts(e); %these are relative to X
        absstopframe=pruned_epochs(k).stops(e);


        landframe=1; %e.g. Land doesn't even exist for social videos
        absframes=absstartframe:absstopframe;
        if absstopframe<length(tracks) %shouldn't have to do this...
            m1x=tracks(absframes,1); %x,y position tracks of each mouse
            m1y=tracks(absframes,2);
            m2x=tracks(absframes,3);
            m2y=tracks(absframes,4);
            m1s=rawX(absframes,1); %mouse 1 speed
            m2s=rawX(absframes,2); %mouse 1 speed
            r=rawX(absframes,3); %range
            m1az=rawX(absframes,5); %mouse 1 azimuth
            m2az=rawX(absframes,6); %mouse 2 azimuth
            m1v0=rawX(absframes,7); %mouse 1 velocity 0 towards mouse2
            m2v0=rawX(absframes,9); %mouse 2 velocity 0 towards mouse1
            m1thig=rawX(absframes,11); %mouse 1 velocity 0 towards mouse2
            m2thig=rawX(absframes,12); %mouse 2 velocity 0 towards mouse1


            %         align to m1(1)
            m1x=m1x-m1x(1);
            m1y=m1y-m1y(1);
            m2x=m2x-m1x(1);
            m2y=m2y-m1y(1);

            %rotate to align to m1 heading direction
            theta=atan2d(m1y(end), m1x(end));
            theta=theta-90; %align to upward axis
            R = [cosd(theta) -sind(theta); sind(theta) cosd(theta)];
            m1=[m1x, m1y];
            m1r=m1*R;
            m1rx=m1r(:,1);
            m1ry=m1r(:,2);
            m2=[m2x, m2y];
            m2r=m2*R;
            m2rx=m2r(:,1);
            m2ry=m2r(:,2);

            %accumulate so we can compute some averages
            Mm1rx{e}=m1rx;
            Mm1ry{e}=m1ry;
            Mm2rx{e}=m2rx;
            Mm2ry{e}=m2ry;
            Mr{e}=r;
            Mm1s{e}=m1s;
            Mm2s{e}=m2s;
            Mm1az{e}= m1az;
            Mm2az{e}= m2az;
            Mm1v0{e}= m1v0;
            Mm2v0{e}= m2v0;
            Mm1thig{e}= m1thig;
            Mm2thig{e}= m2thig;

            %plot(m1x, m1y, 'r');
            %plot(m2x, m2y, 'b');
            nexttile(1) %plot position tracks
            hold on
            plot(m1rx, m1ry, 'r', 'linewid', 2)
            plot(m2rx, m2ry, 'b', 'linewid', 2)
            xlabel('position, rotated and aligned')

            nexttile(2)
            hold on
            plot(r)
            ylabel('range')

            nexttile(3)
            hold on
            plot(m1s, 'r')
            plot(m2s, 'b')
            ylabel('speeds')

            nexttile(4)
            hold on
            plot(m1az, 'r')
            plot(m2az, 'b')
            ylabel('azimuths')

            nexttile(5)
            hold on
            plot(m1v0, 'r')
            plot(m2v0, 'b')
            ylabel('v0 towards other mouse')

            nexttile(6)
            hold on
            plot(m1thig, 'r')
            plot(m2thig, 'b')
            ylabel('thigmo distance from wall')


        else
        warning('tried to access  a absstopframe >  length(tracks)')
        end

    end
    xl=[0 median(pruned_epochs(k).numframes)];
    xlim(xl)
    title(TL,sprintf('\nstate %d ', k ))
    set(gcf, 'pos',[   100*k          10         560        1244])

    %        %compute and plot averages
    %   doesn't make sense to average positional tracks

    %range
    maxlength=0;
    for e=1:length(Mr)
        maxlength=max(length(Mr{e}), maxlength);
    end
    mMr=nan(e, maxlength);
    for e=1:length(Mr)
        mMr(e,1:length(Mr{e}))=Mr{e};
    end
    nexttile(2)
    plot(nanmean(mMr), 'k', 'linew', 2)
    xlim(xl)

    %speeds
    mMm1s=nan(e, maxlength);
    mMm2s=mMm1s;
    for e=1:length(Mm1s)
        mMm1s(e,1:length(Mm1s{e}))=Mm1s{e};
        mMm2s(e,1:length(Mm2s{e}))=Mm2s{e};
    end
    nexttile(3)
    plot(nanmean(mMm1s), 'k', 'linew', 3)
    plot(nanmean(mMm1s), 'r--', 'linew', 3)
    plot(nanmean(mMm2s), 'k', 'linew', 3)
    plot(nanmean(mMm2s), 'b--', 'linew', 3)
    xlim(xl)

    %azimuth
    mMm1az=nan(e, maxlength);
    mMm2az=mMm1az;
    for e=1:length(Mm1az)
        mMm1az(e,1:length(Mm1az{e}))=Mm1az{e};
        mMm2az(e,1:length(Mm2az{e}))=Mm2az{e};
    end
    nexttile(4)
    plot(nanmean(mMm1az), 'k', 'linew', 3)
    plot(nanmean(mMm1az), 'r--', 'linew', 3)
    plot(nanmean(mMm2az), 'k', 'linew', 3)
    plot(nanmean(mMm2az), 'b--', 'linew', 3)
    xlim(xl)

        %velocity0
    mMm1v0=nan(e, maxlength);
    mMm2v0=mMm1v0;
    for e=1:length(Mm1v0)
        mMm1v0(e,1:length(Mm1v0{e}))=Mm1v0{e};
        mMm2v0(e,1:length(Mm2v0{e}))=Mm2v0{e};
    end
    nexttile(5)
    plot(nanmean(mMm1v0), 'k', 'linew', 3)
    plot(nanmean(mMm1v0), 'r')
    plot(nanmean(mMm2v0), 'k', 'linew', 3)
    plot(nanmean(mMm2v0), 'b')
    ylim([-100 100])
    xlim(xl)

        %thigmo
    mMm1thig=nan(e, maxlength);
    mMm2thig=mMm1thig;
    for e=1:length(Mm1thig)
        mMm1thig(e,1:length(Mm1thig{e}))=Mm1thig{e};
        mMm2thig(e,1:length(Mm2thig{e}))=Mm2thig{e};
    end
    nexttile(6)
    plot(nanmean(mMm1thig), 'k', 'linew', 3)
    plot(nanmean(mMm1thig), 'r')
    plot(nanmean(mMm2thig), 'k', 'linew', 3)
    plot(nanmean(mMm2thig), 'b')
    xlim(xl)





end


