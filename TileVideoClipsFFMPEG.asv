function TileVideoClipsFFMPEG(outputdir)

% checking out tiling of video clips with ffmpeg
% not yet generalized - just checking it out
% seems fast and easy
%
% see: https://trac.ffmpeg.org/wiki/Create%20a%20mosaic%20out%20of%20several%20input%20videos
% or see: https://trac.ffmpeg.org/wiki/Create%20a%20mosaic%20out%20of%20several%20input%20videos%20using%20xstack
% or see: https://ottverse.com/stack-videos-horizontally-vertically-grid-with-ffmpeg/

if nargin==0
    outputdir = 'D:\Lisbet\datasets\output_A1suppression\VideoClips\motif_X08';
    cd(outputdir)
else
    fprintf('working in the current directory\n')
    outputdir = pwd;
end

d=dir(sprintf('clip*.*'));
%num_clips=length(d);

% assumes a size of 1080x1440:3:nFrames - but here they are:
sample=VideoReader(d(1).name); sample=read(sample);
[m,n,p,nFrames] = size(sample);

% there are multiple ways of tiling in fmmpeg (referenced above), but here are two:

% 2x2 truncates all videos to the length of the shortest:
% haven't yet figured out the alternative to shortest=1 (to not truncate)
eval(['!ffmpeg -i ' d(5).name ' -i ' d(6).name ' -i ' d(7).name ' -i ' d(8).name ...
    ' -filter_complex "nullsrc=size=1440x1080 [base];' ...
    '    [0:v] setpts=PTS-STARTPTS, scale=720x540 [upperleft];' ...
    '[1:v] setpts=PTS-STARTPTS, scale=720x540 [upperright];	' ...
    '[2:v] setpts=PTS-STARTPTS, scale=720x540 [lowerleft];' ...
    '[3:v] setpts=PTS-STARTPTS, scale=720x540 [lowerright];	' ...
    '[base][upperleft] overlay=shortest=1 [tmp1];' ...
    '[tmp1][upperright] overlay=shortest=1:x=720 [tmp2];' ...
    '[tmp2][lowerleft] overlay=shortest=1:y=540 [tmp3];' ...
    '[tmp3][lowerright] overlay=shortest=1:x=720:y=540" -c:v libx264 output.mkv'])

% 3x3 - truncates all videos to the length of the shortest:
eval(['!ffmpeg -i ' d(5).name ' -i ' d(6).name ' -i ' d(7).name ' -i ' d(8).name ' -i ' d(9).name ' -i ' d(10).name ' -i ' d(11).name ' -i ' d(12).name ' -i ' d(13).name ... 
    ' -filter_complex "nullsrc=size=1440x1080 [base];'...
    '  [0:v] setpts=PTS-STARTPTS, scale=480x360 [upperleft]; '...
    '  [1:v] setpts=PTS-STARTPTS, scale=480x360 [uppermiddle]; '...
    '  [2:v] setpts=PTS-STARTPTS, scale=480x360 [upperright]; '...
    '  [3:v] setpts=PTS-STARTPTS, scale=480x360 [middleleft]; '...
    '  [4:v] setpts=PTS-STARTPTS, scale=480x360 [middlemiddle]; '...
    '  [5:v] setpts=PTS-STARTPTS, scale=480x360 [middleright]; '...
    '  [6:v] setpts=PTS-STARTPTS, scale=480x360 [lowerleft]; '...
    '  [7:v] setpts=PTS-STARTPTS, scale=480x360 [lowermiddle]; '...
    '  [8:v] setpts=PTS-STARTPTS, scale=480x360 [lowerright]; '...
    ' [base][upperleft] overlay=shortest=1 [tmp1]; '...
    ' [tmp1][uppermiddle] overlay=shortest=1:x=480 [tmp2]; '...
    ' [tmp2][upperright] overlay=shortest=1:x=960 [tmp3]; '...
    ' [tmp3][middleleft] overlay=shortest=1:y=360 [tmp4]; '...
    ' [tmp4][middlemiddle] overlay=shortest=1:x=480:y=360 [tmp5]; '...
    ' [tmp5][middleright] overlay=shortest=1:x=960:y=360 [tmp6]; '...
    ' [tmp6][lowerleft] overlay=shortest=1:y=720 [tmp7]; '...
    ' [tmp7][lowermiddle] overlay=shortest=1:x=480:y=720 [tmp8]; '...
    ' [tmp8][lowerright] overlay=shortest=1:x=960:y=720" -c:v libx264 output3x3.mkv'])

% or (THIS DOESN"T WORK YET):
j=0;
for i = 5:13
    j=j+1;
    nBytes(j) = d(i).bytes;
end
[~,ind] = sort(nBytes,'descend'); ind = ind+4;

eval(['!ffmpeg -i ' d(ind(1)).name ' -i ' d(ind(2)).name ' -i ' d(ind(3)).name ' -i ' d(ind(4)).name ' -i ' d(ind(5)).name ' -i ' d(ind(6)).name ' -i ' d(ind(7)).name ' -i ' d(ind(8)).name ' -i ' d(ind(9)).name ... 
    ' -filter_complex "nullsrc=size=1440x1080 [base];'...
    '  [0:v] setpts=PTS-STARTPTS, scale=480x360 [upperleft]; '...
    '  [1:v] setpts=PTS-STARTPTS, scale=480x360 [uppermiddle]; '...
    '  [2:v] setpts=PTS-STARTPTS, scale=480x360 [upperright]; '...
    '  [3:v] setpts=PTS-STARTPTS, scale=480x360 [middleleft]; '...
    '  [4:v] setpts=PTS-STARTPTS, scale=480x360 [middlemiddle]; '...
    '  [5:v] setpts=PTS-STARTPTS, scale=480x360 [middleright]; '...
    '  [6:v] setpts=PTS-STARTPTS, scale=480x360 [lowerleft]; '...
    '  [7:v] setpts=PTS-STARTPTS, scale=480x360 [lowermiddle]; '...
    '  [8:v] setpts=PTS-STARTPTS, scale=480x360 [lowerright]; '...
    ' [base][upperleft] overlay=eof_action=endall [tmp1]; '...
    ' [tmp1][uppermiddle] overlay=eof_action=endall:x=480 [tmp2]; '...
    ' [tmp2][upperright] overlay=eof_action=endall:x=960 [tmp3]; '...
    ' [tmp3][middleleft] overlay=eof_action=endall:y=360 [tmp4]; '...
    ' [tmp4][middlemiddle] overlay=eof_action=endall:x=480:y=360 [tmp5]; '...
    ' [tmp5][middleright] overlay=eof_action=endall:x=960:y=360 [tmp6]; '...
    ' [tmp6][lowerleft] overlay=eof_action=endall:y=720 [tmp7]; '...
    ' [tmp7][lowermiddle] overlay=eof_action=endall:x=480:y=720 [tmp8]; '...
    ' [tmp8][lowerright] overlay=eof_action=endall:x=960:y=720" -c:v libx264 output3x3.mkv'])

% 2x2 - in another way (and not truncating)
eval(['!ffmpeg -i ' d(5).name ' -i ' d(6).name ' -i ' d(7).name ' -i ' d(8).name  ... 
' -filter_complex "[0:v][1:v]hstack=inputs=2[top]; [2:v][3:v]hstack=inputs=2[bottom]; [top][bottom]vstack=inputs=2[v]" -map "[v]" finalOutput.mp4'])

% 3x3 - in another way (and not truncating)
eval(['!ffmpeg -i ' d(5).name ' -i ' d(6).name ' -i ' d(7).name ' -i ' d(8).name ' -i ' d(9).name ' -i ' d(10).name ' -i ' d(11).name ' -i ' d(12).name ' -i ' d(13).name ... 
' -filter_complex '...
'"[0:v][1:v][2:v]hstack=inputs=3[top]; '...
'[3:v][4:v][5:v]hstack=inputs=3[middle]; '...
'[6:v][7:v][8:v]hstack=inputs=3[bottom]; '...
'[top][middle][bottom]vstack=inputs=3[v]" '...
'-map "[v]" finalOutput.mp4'])

% 3x3 - in (still) another way (and not truncating)
j=0;
for i = 5:13
    j=j+1;
    nBytes(j) = d(i).bytes;
end
[~,ind] = sort(nBytes,'descend'); ind = ind+4;

eval(['!ffmpeg -i ' d(ind(1)).name ' -i ' d(ind(2)).name ' -i ' d(ind(3)).name ' -i ' d(ind(4)).name ' -i ' d(ind(5)).name ' -i ' d(ind(6)).name ' -i ' d(ind(7)).name ' -i ' d(ind(8)).name ' -i ' d(ind(9)).name ... 
' -filter_complex " [0:v] setpts=PTS-STARTPTS, scale=qvga [a0]; ' ...
     ' [1:v] setpts=PTS-STARTPTS, scale=qvga [a1]; '...
     ' [2:v] setpts=PTS-STARTPTS, scale=qvga [a2]; '...
     ' [3:v] setpts=PTS-STARTPTS, scale=qvga [a3]; '...
     ' [4:v] setpts=PTS-STARTPTS, scale=qvga [a4]; '...
     ' [5:v] setpts=PTS-STARTPTS, scale=qvga [a5]; '...
     ' [6:v] setpts=PTS-STARTPTS, scale=qvga [a6]; '...
     ' [7:v] setpts=PTS-STARTPTS, scale=qvga [a7]; '...
     ' [8:v] setpts=PTS-STARTPTS, scale=qvga [a8]; '...
     ' [a0][a1][a2][a3][a4][a5][a6][a7][a8]xstack=inputs=9:layout=0_0|w0_0|w0+w1_0|0_h0|w0_h0|w0+w1_h0|0_h0+h1|w0_h0+h1|w0+w1_h0+h1[out] " '...
     '-map "[out]" finalOutput.mp4'])

% replace last line with below to play but not save:    
%' -map "[out]"  -c:v libx264 -t 30 -f matroska -  | ffplay -autoexit  -left 30 -top 30  -']) 

% and 6x6 not truncating
j=0;
for i = 2:37
    j=j+1;
    nBytes(j) = d(i).bytes;
end
[~,ind] = sort(nBytes,'descend'); ind = ind+4;


eval(['!ffmpeg '...
    ' -i ' d(ind(1)).name ...
    ' -i ' d(ind(2)).name ...
    ' -i ' d(ind(3)).name ...
    ' -i ' d(ind(4)).name ...
    ' -i ' d(ind(5)).name ...
    ' -i ' d(ind(6)).name ...
    ' -i ' d(ind(7)).name ...
    ' -i ' d(ind(8)).name ...
    ' -i ' d(ind(9)).name ... 
    ' -i ' d(ind(10)).name ...
    ' -i ' d(ind(11)).name ...
    ' -i ' d(ind(12)).name ...
    ' -i ' d(ind(13)).name ...
    ' -i ' d(ind(14)).name ...
    ' -i ' d(ind(15)).name ...
    ' -i ' d(ind(16)).name ...
    ' -i ' d(ind(17)).name ...
    ' -i ' d(ind(18)).name ...
    ' -i ' d(ind(19)).name ... 
    ' -i ' d(ind(20)).name ...
    ' -i ' d(ind(21)).name ...
    ' -i ' d(ind(22)).name ...
    ' -i ' d(ind(23)).name ...
    ' -i ' d(ind(24)).name ...
    ' -i ' d(ind(25)).name ...
    ' -i ' d(ind(26)).name ...
    ' -i ' d(ind(27)).name ...
    ' -i ' d(ind(28)).name ...
    ' -i ' d(ind(29)).name ... 
    ' -i ' d(ind(30)).name ...
    ' -i ' d(ind(31)).name ...
    ' -i ' d(ind(32)).name ...
    ' -i ' d(ind(33)).name ...
    ' -i ' d(ind(34)).name ...
    ' -i ' d(ind(35)).name ...
    ' -i ' d(ind(36)).name ...
'  -filter_complex " '...
'      [0:v] setpts=PTS-STARTPTS, scale=qqvga [a0];' ...
'      [1:v] setpts=PTS-STARTPTS, scale=qqvga [a1];' ...
'      [2:v] setpts=PTS-STARTPTS, scale=qqvga [a2];' ...
'      [3:v] setpts=PTS-STARTPTS, scale=qqvga [a3];' ...
'      [4:v] setpts=PTS-STARTPTS, scale=qqvga [a4];' ...
'      [5:v] setpts=PTS-STARTPTS, scale=qqvga [a5];' ...
'      [6:v] setpts=PTS-STARTPTS, scale=qqvga [a6];' ...
'      [7:v] setpts=PTS-STARTPTS, scale=qqvga [a7];' ...
'      [8:v] setpts=PTS-STARTPTS, scale=qqvga [a8];' ...
'      [9:v] setpts=PTS-STARTPTS, scale=qqvga [a9];' ...
'      [10:v] setpts=PTS-STARTPTS, scale=qqvga [a10];' ...
'      [11:v] setpts=PTS-STARTPTS, scale=qqvga [a11];' ...
'      [12:v] setpts=PTS-STARTPTS, scale=qqvga [a12];' ...
'      [13:v] setpts=PTS-STARTPTS, scale=qqvga [a13];' ...
'      [14:v] setpts=PTS-STARTPTS, scale=qqvga [a14];' ...
'      [15:v] setpts=PTS-STARTPTS, scale=qqvga [a15];' ...
'      [16:v] setpts=PTS-STARTPTS, scale=qqvga [a16];' ...
'      [17:v] setpts=PTS-STARTPTS, scale=qqvga [a17];' ...
'      [18:v] setpts=PTS-STARTPTS, scale=qqvga [a18];' ...
'      [19:v] setpts=PTS-STARTPTS, scale=qqvga [a19];' ...
'      [20:v] setpts=PTS-STARTPTS, scale=qqvga [a20];' ...
'      [21:v] setpts=PTS-STARTPTS, scale=qqvga [a21];' ...
'      [22:v] setpts=PTS-STARTPTS, scale=qqvga [a22];' ...
'      [23:v] setpts=PTS-STARTPTS, scale=qqvga [a23];' ...
'      [24:v] setpts=PTS-STARTPTS, scale=qqvga [a24];' ...
'      [25:v] setpts=PTS-STARTPTS, scale=qqvga [a25];' ...
'      [26:v] setpts=PTS-STARTPTS, scale=qqvga [a26];' ...
'      [27:v] setpts=PTS-STARTPTS, scale=qqvga [a27];' ...
'      [28:v] setpts=PTS-STARTPTS, scale=qqvga [a28];' ...
'      [29:v] setpts=PTS-STARTPTS, scale=qqvga [a29];' ...
'      [30:v] setpts=PTS-STARTPTS, scale=qqvga [a30];' ...
'      [31:v] setpts=PTS-STARTPTS, scale=qqvga [a31];' ...
'      [32:v] setpts=PTS-STARTPTS, scale=qqvga [a32];' ...
'      [33:v] setpts=PTS-STARTPTS, scale=qqvga [a33];' ...
'      [34:v] setpts=PTS-STARTPTS, scale=qqvga [a34];' ...
'      [35:v] setpts=PTS-STARTPTS, scale=qqvga [a35];' ...
'      [a0][a1][a2][a3][a4][a5][a6][a7][a8][a9][a10][a11][a12][a13][a14][a15][a16][a17][a18][a19][a20][a21][a22][a23][a24][a25][a26][a27][a28][a29][a30][a31][a32][a33][a34][a35]'...
' xstack=inputs=36:layout=0_0|w0_0|w0+w1_0|w0+w1+w2_0|w0+w1+w2+w3_0|w0+w1+w2+w3+w4_0|0_h0|w0_h0|w0+w1_h0|w0+w1+w2_h0|w0+w1+w2+w3_h0|w0+w1+w2+w3+w4_h0|0_h0+h1|w0_h0+h1|w0+w1_h0+h1|'...
'w0+w1+w2_h0+h1|w0+w1+w2+w3_h0+h1|w0+w1+w2+w3+w4_h0+h1|0_h0+h1+h2|w0_h0+h1+h2|w0+w1_h0+h1+h2|w0+w1+w2_h0+h1+h2|w0+w1+w2+w3_h0+h1+h2|w0+w1+w2+w3+w4_h0+h1+h2|0_h0+h1+h2+h3|w0_h0+h1+h2+h3|'...
'w0+w1_h0+h1+h2+h3|w0+w1+w2_h0+h1+h2+h3|w0+w1+w2+w3_h0+h1+h2+h3|w0+w1+w2+w3+w4_h0+h1+h2+h3|0_h0+h1+h2+h3+h4|w0_h0+h1+h2+h3+h4|w0+w1_h0+h1+h2+h3+h4|w0+w1+w2_h0+h1+h2+h3+h4|w0+w1+w2+w3_h0+h1+h2+h3+h4|w0+w1+w2+w3+w4_h0+h1+h2+h3+h4[out]" '...
     '-map "[out]" finalOutput.mp4'])

% replace last line with below to play but not save:    
%' -map "[out]"  -c:v libx264 -t 30 -f matroska -  | ffplay -autoexit  -left 10 -top 10  -']) 
