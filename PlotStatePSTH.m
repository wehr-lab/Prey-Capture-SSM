function PlotStatePSTH(outputdir)
%Usage: PlotStatePSTH(outputdir)
%
% align spiking data to state and epoch boundaries
% uses pruned_tpm.mat generated by PruneTPM

%hmm this should be for a cell, or repeated for simultaneously recorded
%cells. But the hmm is run on an entire dirlist, which has many independent recordings
% I guess we could start with one cell and then repeat for the whole dirlist
% maybe we should save the state-epoch boundaries in the datadir?

cd (outputdir)
load('pruned_tpm.mat')
load('training_data.mat')




cumstartframe=1;
for i=2:length(datadirs);
    % localframenum comes from ConvertGeometryToObservations and
    % already accounts for trimming from cricket drop frame to catch
    % frame
    
    cricketdropframe=groupdata(i).cricketdropframe;
    catchframe=groupdata(i).catchframe;
    %the geometry variables run from cricketdropframe to catchframe
    
    %plot some geometry for this recording
    t=1:length(groupdata(i).range);
    t=t/groupdata(i).framerate;
    figure
    hold on
    range=groupdata(i).range;
    nrange=range/max(abs(range));
    speed=groupdata(i).speed;
    nspeed=speed/max(abs(speed));
    RelativeAzimuth=groupdata(i).RelativeAzimuth;
    nRelativeAzimuth=RelativeAzimuth/max(abs(RelativeAzimuth));
    mouse_thigmo_distance=groupdata(i).mouse_thigmo_distance;
    nmouse_thigmo_distance=mouse_thigmo_distance/max(abs(mouse_thigmo_distance));
    plot(t, nrange)
    plot(t, nspeed)
    plot(t, nRelativeAzimuth)
    plot(t, nmouse_thigmo_distance)
    numframes=length(t);
    localZ=Z(cumstartframe:cumstartframe+numframes-1);
    plot( t, localZ/num_states)
    legend('range', 'speed', 'azimuth', 'thigmo', 'Z')
    
    
    datadir=datadirs{i};
    if ismac datadir=macifypath(datadir);end
    
    cd(datadir)
    
    
    [vids,units,chans] = AssimilateSignals(cricketdropframe, catchframe);
    cmap=jet(length(units));
    offset=0;
    for u=1:length(units)
        offset=offset+1;
        start=units(1).start;
        stop=units(1).stop;
        spiketimes=units(u).spiketimes;
        %spiketimes are empty/broken for now, so let's pretend we get some spiketimes
        spiketimes=start+(stop-start)*rand(100,1);
        
     plot(spiketimes, ones(size(spiketimes))+offset, '.', 'markersize', 20, 'color', cmap(u,:))
 end
 keyboard
    
    
    
    %at end, advance frame marker
    cumstartframe=cumstartframe+numframes;
    
    
end













for k=1:pruned_num_states
    fprintf('\nstate %d/%d ', k, pruned_num_states );
    nbytes = fprintf(' epoch 0/%d', pruned_epochs(k).num_epochs );
    for e=1:min(36, pruned_epochs(k).num_epochs)
        fprintf(repmat('\b',1,nbytes));
        nbytes = fprintf(' epoch %d/%d', e,pruned_epochs(k).num_epochs );
        
        absstartframe=pruned_epochs(k).starts(e); %these are relative to X
        absstopframe=pruned_epochs(k).stops(e);
        moviedir=datadirs_by_frame{absstartframe};
        
        % localframenum comes from ConvertGeometryToObservations and
        % already accounts for trimming from cricket drop frame to catch
        % frame
        localstartframe=localframenum(absstartframe);
        localstopframe=localframenum(absstopframe);
        if localstopframe<localstartframe
            %rare situation where epoch spans a movie boundary
            %localframenum(absframes)
            absframes=absstartframe:absstopframe;
            movieboundary=find(localframenum(absframes)==1);
            if movieboundary>round(length(absframes)/2)
                %keep the part of epoch that's in the first movie
                localstopframe=movieboundary-1;
            elseif movieboundary<=round(length(absframes)/2)
                %keep the part of epoch that's in the second movie
                localstartframe=1;
                moviedir=datadirs_by_frame{absstartframe};
            else error('wtf')
            end
        end
        cd(moviedir)
        d=dir('*labeled.mp4');
        movie_filename=d(1).name;
        v = VideoReader(fullfile(moviedir, movie_filename));
        vidFrames = read(v, [localstartframe, localstopframe]) ;
        vidFrames=imresize(vidFrames, .5);
        str=sprintf('k%d e%d', k,e);
        for f=1:size(vidFrames, 4)
            vidFrames(:,:,:,f) = insertText(vidFrames(:,:,:,f),[5,5],str,...
                'FontSize',60,'Font', 'Arial', 'BoxColor', 'g',  ...
                'BoxOpacity',0.4,'TextColor','white');
        end
        out_movie_filename=sprintf('ssm_state_epoch_clip-%d-%d', k, e);
        out_movie_fullfilename=fullfile(outputdir, out_movie_filename);
        vout = VideoWriter(out_movie_fullfilename, 'MPEG-4');
        open(vout)
        writeVideo(vout,vidFrames)
        close(vout)
    end
end


beep







